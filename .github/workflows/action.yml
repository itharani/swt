name: run workflows

on:
  push:
      paths:
        - 'testfiles/**'  # Trigger on changes in 'testfiles' folder
        - 'rewrite/**'    # Trigger on changes in 'rewrite' folder
  pull_request:
    branches:
      - wenwei  # Trigger the workflow on pull request events targeting 'wenwei' branch

jobs:
  process_files:
    runs-on: ubuntu-latest
    if: ${{ github.event.commits || github.event.head_commit }}  
    # Check if there are commits triggering the workflow
    steps:
      - name: Checkout repo content
        uses: actions/checkout@v2  # Checkout the repository content to GitHub runner
        with: 
          fetch-depth: 2 #Make sure enough history fetched

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'  
          
      - name: Install python packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Set environment variables
        run: echo "Setting up environment variables..."
        env:
          API_KEY: ${{ secrets.API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MODEL_NAME: ${{ secrets.MODEL_NAME }}
          LLM_API_VERSION: ${{ secrets.LLM_API_VERSION }}
          BASE_URL: ${{ secrets.BASE_URL }}
          MODEL_DEPLOYMENT: ${{ secrets.MODEL_DEPLOYMENT }}
          
      - name: Process `testfiles` folder
        env:
          API_KEY: ${{ secrets.API_KEY }}  # Use GitHub secret for API Key
          LLM_API_VERSION: ${{ secrets.LLM_API_VERSION }}  # Use secret for API version
          BASE_URL: ${{ secrets.BASE_URL }}  # Use secret for the Azure endpoint
          MODEL_DEPLOYMENT: ${{ secrets.MODEL_DEPLOYMENT }}  # Use secret for deployment
        if: contains(join(github.event.head_commit.modified, ','), 'testfiles/')
        run: |
          echo "Processing testfiles folder..."
          python src/main.py

      - name: Process `rewrite` folder
        env:
          API_KEY: ${{ secrets.API_KEY }}
          LLM_API_VERSION: ${{ secrets.LLM_API_VERSION }}
          BASE_URL: ${{ secrets.BASE_URL }}
          MODEL_DEPLOYMENT: ${{ secrets.MODEL_DEPLOYMENT }}
        run: |
          if git diff --name-only HEAD~1 | grep -q '^rewrite/'; then
            echo "Processing rewrite folder..."
            python src/rewrite.py        
            git add rewrite/*
            git status
            git commit -m "Refactor code using AI" || echo "No changes to commit"
          else
            echo "No changes in rewrite folder. Skipping."
          fi        

      - name: Generate descriptive commit message
        id: commit_message
        run: |
            TESTFILES=$(git diff --name-only HEAD~1 | grep '^testfiles/' || true)
            REWRITEFILES=$(git diff --name-only HEAD~1 | grep '^rewrite/' || true)
        
            TESTFILES_MESSAGE=""
            REWRITEFILES_MESSAGE=""
        
            if [ -n "$TESTFILES" ]; then
              while IFS= read -r file; do
                filename=$(basename "$file" .py)
                TESTFILES_MESSAGE+="• Created test file for ${filename} "
              done <<< "$TESTFILES"
            fi
        
            if [ -n "$REWRITEFILES" ]; then
              while IFS= read -r file; do
                filename=$(basename "$file" .py)
                REWRITEFILES_MESSAGE+="• Rewrote ${filename}'s file "
              done <<< "$REWRITEFILES"
            fi
        
            # Construct final commit message
            COMMIT_MESSAGE="${TESTFILES_MESSAGE}${REWRITEFILES_MESSAGE}"
        
            # Ensure it's a single-line format
            echo "COMMIT_MESSAGE=$(echo $COMMIT_MESSAGE | tr -s ' ')" >> $GITHUB_ENV
        
                                          
      - name: Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add testfiles/*
          git add rewrite/*

          git status
          git commit -m "${{ env.COMMIT_MESSAGE }}" || echo "No changes to commit"
          
      - name: Push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: wenwei