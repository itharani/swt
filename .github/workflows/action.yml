name: run workflows

on:
  push:
      paths:
        - 'testfiles/**'  # Trigger on changes in 'testfiles' folder
        - 'rewrite/**'    # Trigger on changes in 'rewrite' folder
  pull_request:
    branches:
      - wenwei  # Trigger the workflow on pull request events targeting 'wenwei' branch

jobs:
  process_files:
    runs-on: ubuntu-latest
    if: ${{ github.event.commits || github.event.head_commit }}  
    # Check if there are commits triggering the workflow
    steps:
      - name: Checkout repo content
        uses: actions/checkout@v2  # Checkout the repository content to GitHub runner
        with: 
          fetch-depth: 2 #Make sure enough history fetched

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'  
          
      - name: Install python packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Set environment variables
        run: echo "Setting up environment variables..."
        env:
          API_KEY: ${{ secrets.API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MODEL_NAME: ${{ secrets.MODEL_NAME }}
          LLM_API_VERSION: ${{ secrets.LLM_API_VERSION }}
          BASE_URL: ${{ secrets.BASE_URL }}
          MODEL_DEPLOYMENT: ${{ secrets.MODEL_DEPLOYMENT }}
          
      - name: Process `testfiles` folder
        if: contains(join(github.event.head_commit.modified, ','), 'testfiles/')
        run: |
          echo "Processing testfiles folder..."
          python src/main.py

      - name: Process `rewrite` folder
        if: contains(join(github.event.head_commit.modified, ','), 'rewrite/')
        run: |
          echo "Processing rewrite folder..."
          python rewrite.py        
          git add rewrite/*
          git status
          git commit -m "Refactor code using AI" || echo "No changes to commit"  
        
      - name: Generate descriptive commit message
        id: commit_message
        run: |
            TESTFILES=$(git diff --name-only HEAD~1 ||true | grep '^testfiles/' || true)
            REWRITEFILES=$(git diff --name-only HEAD~1 || true | grep '^rewrite/' || true)
              
            if [ -n "$TESTFILES" ]; then
              TESTFILES_MESSAGE=$(echo "$TESTFILES" | sed -E 's|testfiles/(.*).py|• \U\1 Test File created|g' | tr '\n' '\n')
            else
              TESTFILES_MESSAGE=""
            fi
          
            if [ -n "$REWRITEFILES" ]; then
              REWRITEFILES_MESSAGE=$(echo "$REWRITEFILES" | sed -E 's|rewrite/(.*).py|• Rewrote \U\1\'"'"'s file|g' | tr '\n' '\n')
            else
              REWRITEFILES_MESSAGE=""
            fi
          
            if [ -n "$TESTFILES_MESSAGE" ] || [ -n "$REWRITEFILES_MESSAGE" ]; then
              COMMIT_MESSAGE="${TESTFILES_MESSAGE}${REWRITEFILES_MESSAGE}"
              echo "Changes detected, preparing commit"
            else
              COMMIT_MESSAGE="No relevant changes detected"
              echo "NO changes detected, skipping commit"
            fi
              echo "COMMIT_MESSAGE=$COMMIT_MESSAGE" >> $GITHUB_ENV
                          
      - name: Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add testfiles/*
          git add rewrite/*

          git status
          git commit -m "${{ env.COMMIT_MESSAGE }}" || echo "No changes to commit"
          
      - name: Push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: wenwei